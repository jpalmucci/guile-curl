\input texinfo @c -*- Mode: texinfo; Fillcolumn: 70; -*-
@c %**start of header
@setfilename curl.info
@include version.texi
@settitle Curl @value{VERSION}

@syncodeindex fn cp
@syncodeindex vr cp
@syncodeindex ky cp
@syncodeindex pg cp
@syncodeindex tp cp

@c %**end of header

@copying
This manual is for Curl, a Guile net client library, (version
@value{VERSION}, @value{UPDATED}).  Curl provides bindings for the
underlying libcurl library, which provides functionality for accessing
files via urls.

Copyright @copyright{} 2007, 2011 Michael L. Gran

@quotation
Permission is hereby granted, free of charge, to any person obtaining a  
copy of this software and associated documentation files (the            
"Software"), to deal in the Software without restriction, including      
without limitation the rights to use, copy, modify, merge, publish,      
distribute, distribute with modifications, sublicense, and/or sell       
copies of the Software, and to permit persons to whom the Software is    
furnished to do so, subject to the following conditions:                 
                                                                         
The above copyright notice and this permission notice shall be included  
in all copies or substantial portions of the Software. 

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   
IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    
THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               
                                                                         
Except as contained in this notice, the name(s) of the above copyright   
holders shall not be used in advertising or otherwise to promote the     
sale, use or other dealings in this Software without prior written       
authorization.                                                           

@end quotation
@end copying



@titlepage
@title A Guile Curl Library
@subtitle For version @value{VERSION}, @value{UPDATED}
@author The CURL Team
@author Michael L. Gran


@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@summarycontents

@contents


@ifnottex
@node Top, Introduction, (dir), (dir)
@top A Guile Curl Library
@insertcopying
@end ifnottex

@menu
* Introduction::                
* Reference::                   
* Index::                       

@detailmenu
 --- The Detailed Node Listing ---

Tutorial

* Fetching from an HTTP server::  

@end detailmenu
@end menu

@node Introduction, Reference, Top, Top
@chapter Tutorial

This library has procedures that allow Guile to do client-side URL
transfers, like requesting documents from http or ftp servers.  It is
based on the libcurl library.

Before using these functions, you must first load the library.  If the
library built and installed correctly, you should be able to load the
library in the usual way by using @code{(use-modules (curl))}.

To transfer a file, you start off by creating a handle using
@code{curl-easy-init}.  @code{curl-easy-init} is a procecure that
takes no arguments and returns a handle.  The handle represents a
single connection between computers using some standard protocol.

The handle holds opaque information used by the underlying
@code{libcurl} library, so displaying it or writing it doesn't produce
much useful information beyond the location of a pointer in memory.

Before the handle can be used, it must first be given information
about the connection and transfer that it will do.  The procedure
@code{curl-easy-setopt} is used to tell this handle's connection how
to behave.  There are many dozens of options that can be set, but,
at a minimum, it just needs a URL.

Then, to initiate the transfer, the procedure @code{curl-easy-perform}
is called.  It returns the requested resource as a bytevector.  The
bytevector will need to be converted to a string if it is fetching a
text resource.

@menu
* Fetching from an HTTP server::  
@end menu

@node Fetching from an HTTP server,  , Introduction, Introduction
@section Fetching from an HTTP server

The following code will fetch a web page that has a simple URL.

@lisp
(use-modules (curl)
             (rnrs bytevectors))
(define handle (curl-easy-init))
(curl-easy-setopt handle 'url "http://www.gnu.org")
(display (utf8->string (curl-easy-perform handle)))
@end lisp

That's pretty much all there is to it.  Beyond that, there are dozens
of options that can be set by @code{curl-easy-setopt} that change how
the request is performed.

@node Reference, Index, Introduction, Top
@chapter Reference

@deffn Procedure curl-easy-init
Returns a curl handle that you must use as input to other functions.
This handle represents one connection to a server.
@end deffn

@deffn Procedure curl-easy-cleanup handle
This forcibly closes all connections that this handle has used
and has possibly kept open until now.  Any use of the handle
after it has been closed is invalid.

Calling this procedure is optional: handles will automatically
be freed when no longer in use.
@end deffn

@deffn Procedure curl-easy-reset handle
Re-initializes all options previously set on this CURL handle
to its default values.

It does not change live connections, the Session ID cache, the DNS
cache, the cookies or the shared.
@end deffn

@deffn Procedure curl-easy-perform handle
This function is called after the init and all the curl-easy-setopt
calls are made, and will perform the transfer as described in the
options.  It must be called with the same handle as input as the
curl_easy_init call returned.

It returns either a bytevector containing the resource, or @code{#f}
on failure.  For information about the failure, you can call
@code{curl-error-string}.
@end deffn

@deffn Procedure curl-error-string
If a call to @code{curl-easy-perform} fails, calling this function
will return information about the last error as a string.
@end deffn

@deffn Procedure curl-error-code
If a call to @code{curl-easy-perform} fails, calling this function
will return information about the last error as an integer.  These
integers come from the libcurl library and are defined in its header
file <curl/curl.h>.
@end deffn

@deffn Procedure curl-easy-setopt handle option info
This procedure sets the options for this handle that will describe
what will happend when @code{curl-easy-perform} is called.
@var{option} is a symbol, and @var{info} is additional information
needed for the option.  See below for a table of options.
@end deffn

@section Options

The options that can be set by @code{curl-easy-setopt} are listed
below.  For a much better explanation of what each of these options
does, you can look at the manual page for @code{curl_easy_setopt}
which comes with the libcurl library, which you should have since it
is required to compile this package.  

@subsection Behavior Options
@table @code
@item verbose
Takes @code{#t} or @code{#f}.  When @code{#t} it displays information
about its operations.  It will be sent to the standard error port.

@item header
Takes @code{#t} or @code{#f}.  When @code{#t}, it includes the header
in the body output for those protocols that have a header preceding
the data.

@item nosignal
Takes @code{#t} or @code{#f}.  When @code{#t}, no signal handlers or
any functions that cause signals to be sent will be used when
performing an operation.

@item wildcardmatch
Takes @code{#t} or @code{#f}.  When @code{#t}, multiple files will be
transfered when the URL has wildcards like @code{*} and @code{?}.
Only works for FTP-like connections.

@end table

@subsection Network Options
@table @code
@item url
Takes a string.  The actual URL to be used to perform the operation,
such as ``http://www.gnu.org''.  The URL string should be url-encoded
and only contain ASCII characters.

@item protocols
Takes an integers that is a bitmask created from the @code{CURLPROTO}
constants.  If used, this bitmask limits what protocols may be used in
the transfer.  By default, all supported protocols are allowed.  The
constants are CURLPROTO_HTTP CURLPROTO_HTTPS CURLPROTO_FTP
CURLPROTO_FTPS CURLPROTO_SCP CURLPROTO_SFTP CURLPROTO_TELNET
CURLPROTO_LDAP CURLPROTO_LDAPS CURLPROTO_DICT CURLPROTO_FILE
CURLPROTO_TFTP CURLPROTO_IMAP CURLPROTO_IMAPS CURLPROTO_POP3
CURLPROTO_POP3S CURLPROTO_SMTP CURLPROTO_SMTPS CURLPROTO_RTSP
CURLPROTO_RTMP CURLPROTO_RTMPT CURLPROTO_RTMPE CURLPROTO_RTMPTE
CURLPROTO_GOPHER and CURLPROTO_ALL.

@item redir-protocols
Takes an integer that is a bitmask of @code{CURLPROTO} defines.  If
used, it limits what protocols may b used in a transfer that is
followed in a redirect.

@item proxy
Takes a string holding the host name or dotted IP address of the http
proxy to use.

@item proxyport
Takes in integer to set the proxy port.

@item proxytype
Takes an integer that sets the type of proxy.  The integer should be
one of the CURLPROXY constants: CURLPROXY_HTTP CURLPROXY_HTTP_1_0
CURLPROXY_SOCKS4 CURLPROXY_SOCKS5 CURLPROXY_SOCKS4A or
CURLPROXY_SOCKS5_HOSTNAME.

@item noproxy
Takes a string that is a comma-separated list of hosts that do not use
a proxy.  '*' can be used as a wildcard.

@item httpproxytunnel
Takes a boolean.  When @code{#t} all opperations are tunnelled through
a given proxy.

@item socks5-gssapi-service
Takes a string that holds the name of a service for a socks5 server.

@item socks5-gssapi-nec
Takes a boolean. When @code{#t}, this allows the unprotected exchange
of the protection mode negotiation during gssapi negotiation.

@item interface
Takes a string.  This sets the interface name to use as outgoing
network interface.  The name can be an interface name, and IP address,
or a host name.

@item localport
Takes in integer.  Sets the local port number of the socket used for
the connection.

@item localportrange
Takes in integer.  This is the number of attempts libcurl should make
to find a working local port number.  It starts with the port given by
the @code{localport} options and then adds one for each retry.

@item dns-cache-timeout
Takes an integer that sets a timeout in seconds for how long name
resolves will be kept in memory.  Zero disable caching. -1 makes
caching infinite.

@item buffersize
Takes an integer that sets the preferred size in bytes for the receive
buffer.  While this scheme implementation only returns completed
transfers, this option changes the sizes of the chunks used to
assemble a resouce when it is being transfered.

@item port
Takes an integer that specifies the report port number to connect to,
instead of the default or what was specified in the @code{url}.

@item tcp-nodelay
Takes a boolean.  @code{#t} indicates that the TCP's Nagle algorithm
should be disabled.

@item address-scope
Takes a long that specified the scope id value to use when connecto to
IPv6 link-local or site-local addresses.
@end table

@subsection Name and Password Options
@table @code
@item netrc
Takes a long which is one of the CURL_NETRC constants.  It controls
whether to look in your .netrc file for user names and passwords.  The
allowed values are CURL_NETRC_OPTIONAL, CURL_NETRC_IGNORED and
CURL_NETRC_REQUIRED.

@item netrc-file
Takes a string that defines the full file path to the netrc file, if
it is not in the default location.

@item userpwd
Takes a string that should be ``[user name]:[password]'' for a
connection.

@item proxyuserpwd
Takes a string ``[user name]:[password]'' that is the password for the
HTTP proxy.

@item username
Takes a string that is the user name for a transfer.

@item password
Takes a string that is the password for a transfer.

@item proxyusername
Takes a string that is a user name to use for a transfer when
connecting to a proxy.

@item proxypassword
Takes a string that is a password to use for a transfer when
connecting to a proxy.

@item httpauth
Takes in integer which is a bitmask of CURLAUTH constants that
describes the authentication methods that can be used.  The
authentication method constants are CURLAUTH_BASIC CURLAUTH_DIGEST
CURLAUTH_DIGEST_IE CURLAUTH_GSSNEGOTIATE CURLAUTH_NTLM CURLAUTH_ANY
CURLAUTH_ANYSAFE and CURLAUTH_ONLY.

@item proxyauth
Takes in integer that is set to a bitmask of CURLAUTH constants that
describes the authentication methods that can be used for proxy
authentication. 

@end table

@subsection HTTP Options
@table @code
@item autoreferer
Takes a boolean.  When @code{#t} it will automatically set the
``Referer:'' field in requests where it follows a ``Location:''
redirect.

@item encoding
Sets the contents of the ``Accept-Encoding:'' header sent in an HTTP
request, and enables decoding of a response when a
``Content-Encoding:'' header is received.  Takes a string that
contains ``identity'', ``deflate'', and/or ``gzip''.

@item followlocation
Takes a boolean.  When @code{#t} it will follow any ``Location:''
header that the server sends as part of the HTTP header.

@item unrestricted-auth
Takes a boolean.  When @code{#t} it tallows the sending of
authentication data (user + password) when following locations, even
when the hostname has changed.

@item maxredirs
Takes a number that will be the redirection limit.  Zero disallows
redirections. -1 allows infinite numbers of redirections.

@item postredir
Takes an integer bitmask that controls how it acts on redirects after
POSTs that get a 301 or 302 response back.  The CURL_REDIR_POST_301
constant tells the library to not convert POST requests to GET
requests when following a redirection.  The CURL_REDIR_POST_302
maintains the request method after a 302 redirect. CURL_REDIR_POST_ALL
does both.

@item post
Boolean

@item httppost
HTTPPost.

@item referer
String.

@item useragent
String.

@item httpheader
List.

@item http200aliases
List.

@item cookie
String.

@item cookiefile
String.

@item cookiejar
String.

@item cookiesession
Boolean.

@item cookielist
String.

@item httpget
Boolean.

@item http-version
Integer.

@item ignore-content-length
Boolean.

@item http-content-decoding
Boolean

@item http-transfer-decoding
Boolean.

@end table

@subsection Connection Options
@table @code
@item timeout
Integer.

@item timeout-ms
Integer.

@item low-speed-limit
Integer.

@item low-speed-time
Integer.

@item maxconnects
Integer.

@item fresh-connect
Boolean.

@item forbid-reuse
Boolean.

@item connecttimeout
Integer.

@item connecttimeout-ms
Integer.

@item ipresolve
Integer.

@item connect-only
Boolean.

@end table


@node Index,  , Reference, Top
@unnumbered Index
@printindex cp
@bye
